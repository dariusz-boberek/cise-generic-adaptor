package eu.cise.adaptor.core.messagehandler.port.in;

import eu.cise.servicemodel.v1.message.Acknowledgement;
import eu.cise.servicemodel.v1.message.Message;

/**
 * Port for handling incoming messages from the Service Handler.
 * <p>
 * This interface is a key component in the Message Handler hexagon, responsible for
 * the processing and preparation of incoming messages received from the Service Handler.
 * It ensures that the messages are properly formatted and ready to be delivered to the CISE Node.
 */
public interface IncomingServiceHandlerToMessageHandlerPort {

    /**
     * This method is called when the CISE Message has been prepared in the Service Handler hexagon and it is ready to be sent to the CISE Node.
     * The message does not need to be signed as it will be signed inside the MessageHandler hexagon before it is delivered to the CISE Node.
     * @param message The prepared message to be sent to the CISE Node
     * @return the Synchronous Acknowledgement generated by the CISE Node
     */
    Acknowledgement sendMessage(Message message);

}
